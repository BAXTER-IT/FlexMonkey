<?xml version="1.0" encoding="utf-8"?>
<containers:FMPopup xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    xmlns:containers="com.gorillalogic.flexmonkey.views.containers.*"
                    xmlns:forms="com.gorillalogic.flexmonkey.views.forms.*"
                    skinClass="com.gorillalogic.flexmonkey.views.skins.FMPopupSkin"
                    title="Edit {type}"
                    monkeyRunnable="{this.monkeyNode}">

    <fx:Script>
        <![CDATA[
			import com.gorillalogic.flexmonkey.core.MonkeyNode;
			import com.gorillalogic.flexmonkey.core.MonkeyRunnable;
			import com.gorillalogic.flexmonkey.core.MonkeyTest;
			import com.gorillalogic.flexmonkey.core.MonkeyTestCase;
			import com.gorillalogic.flexmonkey.core.MonkeyTestSuite;
			import com.gorillalogic.flexmonkey.model.ApplicationModel;
			import com.gorillalogic.flexmonkey.utils.Assets;
			import com.gorillalogic.flexmonkey.views.skins.FMPopupSkin;
			
			import mx.events.PropertyChangeEvent;
			
			import spark.events.TextOperationEvent;

            private var _monkeyNode:MonkeyNode;
            [Bindable] private var type:String;
            [Bindable] private var thinkTime:String;
            [Bindable] private var nodeDescription:String;

            [Bindable] public function get monkeyNode():MonkeyNode {
                return this._monkeyNode;
            }

            public function set monkeyNode(value:MonkeyNode):void {
                thinkTime = MonkeyRunnable.DEFAULT_THINK_TIME.toString();
                currentState = "base";
                this._monkeyNode = value;
                nodeDescription = this._monkeyNode.description;

                if (_monkeyNode is MonkeyTestSuite) {
                    type = "Suite";
                    titleImageSource = Assets.suiteImageClass;
                } else if (_monkeyNode is MonkeyTestCase) {
                    type = "Case";
                    titleImageSource = Assets.caseImageClass;
                } else if (_monkeyNode is MonkeyTest) {
                    thinkTime = new String((_monkeyNode as MonkeyTest).defaultThinkTime);
                    type = "Test";
                    currentState = "baseTest";
                    titleImageSource = Assets.testImageClass;
                }

                if (_monkeyNode != null) {
                    _monkeyNode.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, propertyUpdate);
                }
            }

            protected function propertyUpdate(event:Event):void {
                ApplicationModel.instance.isMonkeyTestFileDirty = true;
            }

            protected function thinkTimeChangeHandler(event:TextOperationEvent):void {
                (_monkeyNode as MonkeyTest).defaultThinkTime = uint(thinkTimeInput.text);
            }

            protected function descriptionChangeHandler(event:TextOperationEvent):void {
                _monkeyNode.description = descTextInput.text;
            }
        ]]>
    </fx:Script>

    <containers:states>
        <s:State name="base"/>
        <s:State name="baseTest"/>
    </containers:states>

    <s:Group top="5"
             bottom="5"
             left="0"
             right="0"
             maxWidth="650"
             maxHeight="575">

        <s:layout>
            <s:VerticalLayout/>
        </s:layout>

        <s:HGroup width="100%"
                  verticalAlign="middle">
            <s:Label text="Name"
                     fontWeight="bold"
                     width="125"
                     textAlign="right"/>
            <s:TextInput text="@{monkeyNode.name}"
                         width="185"
                         left="85"
                         top="10"
                         right="10"/>
        </s:HGroup>

        <s:HGroup width="100%"
                  verticalAlign="middle">
            <s:Label text="Description"
                     fontWeight="bold"
                     width="125"
                     textAlign="right"/>
            <s:TextInput id="descTextInput"
                         text="{nodeDescription}"
                         width="185"
                         change="descriptionChangeHandler(event)"/>
        </s:HGroup>

        <s:HGroup width="100%"
                  verticalAlign="middle"
                  includeIn="baseTest">
            <s:Label text="Think Time (milliseconds)"
                     fontWeight="bold"
                     width="125"
                     textAlign="right"/>
            <s:TextInput id="thinkTimeInput"
                         text="{thinkTime}"
                         width="185"
                         restrict="0-9"
                         change="thinkTimeChangeHandler(event)"/>
        </s:HGroup>

        <s:HGroup width="100%"
                  verticalAlign="middle">
            <s:Label text="Ignore"
                     fontWeight="bold"
                     width="125"
                     textAlign="right"/>
            <s:CheckBox id="ignoreInput"
                        selected="@{monkeyNode.ignore}"/>
        </s:HGroup>


    </s:Group>
</containers:FMPopup>
